{"version":3,"sources":["components/logo/concatLogo.svg","modules/userManager.js","components/auth/userManager.js","components/logo/logo.js","components/navbar/navbar.js","components/tickets/activeTickets/ticketItem.js","components/tickets/activeTickets/editTicketModal.js","components/tickets/activeTickets/notifyTicketModal.js","components/tickets/activeTickets/ticketList.js","components/tickets/activeTickets/currentTicketItem.js","components/tickets/activeTickets/currentTicket.js","components/tickets/ticketForm.js","components/tickets/activeTickets/ticketContainer.js","modules/ticketManager.js","components/dashboard/userProfile.js","components/dashboard/userImage.js","components/dashboard/dashContainer.js","modules/currentTicketUsers.js","components/tickets/solvedTickets/teacher/mySolvedTicketItem.js","components/tickets/solvedTickets/teacher/mySolvedTicketsTeacher.js","components/tickets/solvedTickets/teacher/allSolvedTicketsItem.js","components/tickets/solvedTickets/teacher/allSolvedTicketsTeacher.js","components/tickets/solvedTickets/student/mySolvedTicketItem.js","components/tickets/solvedTickets/student/mySolvedTicketsStudent.js","components/tickets/solvedTickets/student/allSolvedTicketsItem.js","components/tickets/solvedTickets/student/allSolvedTicketsStudent.js","components/tickets/solvedTickets/solvedContainer.js","modules/joinedTickets.js","components/registration/stepOne-UserDetails.js","components/registration/stepTwo-ClassDetails.js","components/registration/stepThree-Image.js","components/registration/stepConfirmation.js","components/registration/stepRegisterContainer.js","components/dashboard/Login.js","components/dashboard/Home.js","components/search/search.js","components/applicationViews.js","App.js","serviceWorker.js","config.js","index.js"],"names":["module","exports","__webpack_require__","p","userManager","getUser","userId","firebase","database","ref","once","then","snapshot","val","deleteUser","id","remove","saveUser","obj","_this","this","newUserKey","child","push","key","set","snapShot","editUser","editedUser","_this2","updates","update","setUserInSessionStorage","user","sessionStorage","setItem","JSON","stringify","login","email","password","loginWithFirebase","firebaseId","userFromFirebase","getUserFromSessionStorage","getItem","parse","logout","removeItem","registerWithFirebase","createUserWithEmailAndPassword","data","uid","catch","error","hasOwnProperty","alert","message","signInWithEmailAndPassword","Logo","react_default","a","createElement","src","logo","className","alt","Component","MenuNav","state","handleItemClick","e","_ref","name","setState","activeItem","props","onLogout","clearActiveUser","history","handleNavView","activeUser","student","Menu","secondary","stackable","Item","react_router_dom","to","Dropdown","closeOnChange","item","text","position","Input","icon","placeholder","active","onClick","onKeyUp","handleSearch","isAuthenticated","input","keyCode","console","log","target","value","getSearchResults","contextRef","Sticky","context","withRouter","TicketList","classId","ticketComplete","ticketTitle","ticketBody","submitTime","linked","solutionNotes","submitTimeInterval","componentWillUnmount","clearInterval","componentDidMount","checkSubmitTime","setInterval","handleAssign","addTeacherTicket","ticketId","handleJoinTicket","addJoin","handleRemoveJoinTicket","deleteJoin","joinedTicketId","handleEdit","handleOpenModal","editTicketState","image","handleStudentSolve","editTicket","getUserImage","map","index","Image","handleMyTicketView","Fragment","Form","TextArea","label","defaultValue","onChange","Button","showRemoveJoin","handleCardLength","parsedDate","moment","time","diff","handleTicketView","Card","centered","fluid","raised","Content","Header","Description","Meta","cardColor","hasMultipleJoins","EditTicket","openModal","editTicketItem","opened","onCloseModal","handleOpenCloseModal","undefined","Modal","open","onClose","Icon","type","Actions","NotifyModal","handleNotifyModal","teacher","notifyTicketItem","allTeacherTickets","forEach","join","allUsers","size","basic","openNotify","floated","OpenTicketHeader","editItem","ticketNotify","notifyModalOpenAlready","teacherHadYourTicket","numOfTeachHadTicket","openTicket","allTickets","filter","ticket","currentUserIsTeacherWithTicket","isTicketAssignedToSomeone","teacherHadTicket","setTimeout","classTickets","images","joinedTickets","length","ticketItem_TicketList","Object","assign","ticketList_OpenTicketHeader","editTicketModal_EditTicket","notifyTicketModal_NotifyModal","CurrentTicketItem","handleComplete","handleReassign","removeTeacherTicket","teacherTicketJoinId","CurrentTicketHeader","TicketForm","currentTickets","currentTicketItem_CurrentTicketItem","currentTicket_CurrentTicketHeader","displayStyle","display","FormSuccess","style","success","Message","header","content","FormHeader","newTicket","addTicket","Date","format","document","querySelector","reset","ticketForm_FormHeader","Grid","Row","Column","onSubmit","Field","control","ticketForm_FormSuccess","TicketContainer","handleView","ticketList_TicketList","currentTicket_TicketForm","ticketForm","ticketManager","getTicket","saveTicket","newTicketKey","editedTicket","search","inputValue","ticketArr","toUpperCase","indexOf","UserProfile","username","newPassword","blurb","available","displayConditions","editMode","UserImage","files","TeacherContainer","storageRef","editModeImage","handleEditState","handleEditImage","handleSaveImage","imageUploadFiles","concat","now","put","getDownloadURL","url","reauthenticate","currentPassword","currentUser","cred","EmailAuthProvider","credential","reauthenticateWithCredential","changePassword","updatePassword","changeEmail","newEmail","updateEmail","handleSaveState","Container","userImage_UserImage","userProfile_UserProfile","currentTicketUsers","getCurrentTicketUser","joinedId","deleteCurrentTicketUser","saveCurrentTicketUser","newCurrentTicketUserKey","editCurrentTicketUser","editedCurrentTicketUser","SolvedTicketList","MySolvedTicketHeader","MySolvedTicketList","reverseTickets","mySolvedTicketItem_SolvedTicketList","mySolvedTicketsTeacher_MySolvedTicketHeader","AllSolvedTicketHeader","AllSolvedTicketList","allSolvedTicketsItem_SolvedTicketList","allSolvedTicketsTeacher_AllSolvedTicketHeader","student_mySolvedTicketItem_SolvedTicketList","mySolvedTicketsStudent_MySolvedTicketHeader","getCardClass","extraClass","student_allSolvedTicketsItem_SolvedTicketList","allSolvedTicketsStudent_AllSolvedTicketHeader","SolvedTicketsContainer","mySolvedTicketsTeacher_MySolvedTicketList","allSolvedTicketsTeacher_AllSolvedTicketList","mySolvedTicketsStudent_MySolvedTicketList","allSolvedTicketsStudent_AllSolvedTicketList","getJoinedTicket","deleteJoinedTicket","saveJoinedTicket","newJoinedTicketKey","editJoinedTicket","editedJoinedTicket","StepOneUserDetails","saveAndContinue","preventDefault","nextStep","values","largeScreen","computer","tablet","mobile","Segment","as","textAlign","handleChange","StepTwoClassDetails","cohortName","back","prevStep","classes","allClasses","cohort","Radio","checked","handleChangeStudent","_ref2","event","currentTarget","textContent","handleChangeClasses","options","selection","upward","RegisterSuccess","StepConfirmation","_this$props$values","saveUserToFirebase","newUserFromFirebase","newUser","onRegister","shouldRedirect","stepConfirmation_RegisterSuccess","StepRegisterContainer","step","defineProperty","isStudent","handleChangeImage","file","_this$state","stepOne_UserDetails_StepOneUserDetails","stepTwo_ClassDetails_StepTwoClassDetails","stepThree_Image_StepOneUserDetails","stepConfirmation_StepConfirmation","Login","submit","onLogin","Home","solvedTickets","numberOfTickets","SearchResults","searchResults","ApplicationViews","users","tickets","newState","TicketsManager","UsersManager","addUser","setUser","CurrentTicketManager","addCurrentTicketUser","teacherTicket","JoinedTicketManager","newJoin","joinedTicket","editJoin","on","userArr","joinedTicketsArr","allJoinedTickets","classTicketsArr","allClassTickets","classTicket","currentTicketUsersArr","allCurrentTicketUsers","currentTicketUser","classesArr","oneClass","orderByChild","reverse","_this3","react_router","exact","path","render","Home_Home","Login_Login","stepRegisterContainer_StepRegisterContainer","addClass","editClass","dashContainer_TeacherContainer","ticketContainer_TicketContainer","editTeacherTicket","solvedContainer_SolvedTicketsContainer","class","search_SearchResults","App","TicketSearch","results","navbar_navbar","applicationViews","Boolean","window","location","hostname","match","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","ReactDOM","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e86cbf60.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/concatLogo.0661598e.svg\";","import firebase from 'firebase/app';\nimport 'firebase/database';\nimport 'firebase/auth';\n\nexport default {\n  getUser(userId) {\n    return firebase.database().ref('/users/' + userId).once('value').then(function (snapshot) {\n      return snapshot.val();\n    });\n  },\n\n  deleteUser(id) {\n    return firebase.database().ref(\"users/\" + id).remove();\n  },\n\n  saveUser(obj) {\n    let newUserKey = firebase.database().ref().child('users').push().key;\n    obj.id = newUserKey;\n    let database = firebase.database();\n\n    return database.ref('users/' + newUserKey).set(obj)\n      .then((snapShot) => {\n        return this.getUser(newUserKey);\n      });\n  },\n\n  editUser(editedUser) {\n    let updates = {};\n    updates[\"/users/\" + editedUser.id] = editedUser;\n    return firebase.database().ref().update(updates).then(() => {\n      return this.getUser(editedUser.id);\n    });\n  }\n}","import * as firebase from 'firebase/app';\nimport 'firebase/auth';\nimport saveUserToFirebase from '../../modules/userManager'\n\nconst setUserInSessionStorage = (user) => {\n  sessionStorage.setItem('user', JSON.stringify(user));\n}\n\n//username email and password\nexport const register = (user) => {\n  return registerWithFirebase(user.email, user.password)\n    .then(firebaseId => {\n      if (firebaseId === null || firebaseId === undefined)\n        return null;\n\n      user.password = null;\n      user.id = firebaseId;\n      return saveUserToFirebase.saveUser(user)\n    })\n    .then(newUserFromFirebase => {\n      if (newUserFromFirebase === null || newUserFromFirebase === undefined)\n        return null;\n\n      setUserInSessionStorage(newUserFromFirebase);\n      return newUserFromFirebase;\n    })\n    .catch(function (error) {\n      alert(`Yikes, you did not register`)\n      console.log(error)\n    })\n}\n\nexport const login = (email, password) => {\n  return loginWithFirebase(email, password)\n    .then(firebaseId => {\n      return getUser(firebaseId)\n    })\n    .then(userFromFirebase => {\n      setUserInSessionStorage(userFromFirebase);\n      return userFromFirebase\n    })\n}\n\nexport const getUser = (userId) => {\n  return firebase.database().ref('/users/' + userId).once('value').then(function (snapshot) {\n    return snapshot.val();\n  });\n}\n\nexport const getUserFromSessionStorage = () => {\n  const user = sessionStorage.getItem('user');\n\n  if (!user) return null;\n\n  return JSON.parse(user);\n}\n\nexport const logout = () => {\n  sessionStorage.removeItem('user');\n}\n\nexport const registerWithFirebase = (email, password) => {\n  return firebase.auth().createUserWithEmailAndPassword(email, password)\n    .then(data => {\n      return data.user.uid\n    }).catch((error) => {\n      if (typeof (error) === \"object\" && error.hasOwnProperty(\"message\")) {\n        alert(error.message);\n      } else {\n        alert(`Burn your computer and try again`)\n      }\n    })\n}\n\nexport const loginWithFirebase = (email, password) => {\n  return firebase.auth().signInWithEmailAndPassword(email, password)\n    .then(data => {\n      return data.user.uid\n    }).catch(() => {\n      alert(`No LoG iN. TrY AgAiN`)\n    })\n}\n\nexport const updatePasswordOnProfile = (newPassword) => {\n  const user = firebase.auth().currentUser;\n  user.updatePassword(newPassword).then(function () {\n    // Update successful.\n  }).catch(function (error) {\n    // An error happened.\n  });\n}","import React, { Component } from 'react'\nimport logo from \"./concatLogo.svg\"\n\nclass Logo extends Component {\n\n  render() {\n    return (\n      <div>\n        <img src={ logo } className=\"logo-header ui medium image\" alt=\"concat logo\" />\n      </div>\n    );\n  }\n}\n\nexport default Logo;","import React, { Component } from 'react';\nimport { Input, Menu, Sticky, Dropdown, Item } from 'semantic-ui-react';\nimport { withRouter } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport './navbar.css';\n\nclass MenuNav extends Component {\n  state = {}\n\n  handleItemClick = (e, { name }) => this.setState({ activeItem: name })\n\n  logout = () => {\n    this.props.onLogout();\n    this.props.clearActiveUser(null);\n    this.props.history.push('/login');\n  }\n\n  handleSearch(input) {\n    if (input.keyCode === 13) {\n      console.log(\"HANDLE SEARCH - INPUT TARGET VALUE:\", input.target.value);\n      this.props.getSearchResults(input.target.value);\n      // this.props.history.push(\"/search\");\n    }\n  }\n\n  handleNavView = () => {\n    //teacher site\n    if (this.props.activeUser !== null && this.props.activeUser.student === false) {\n      const { activeItem } = this.state\n      return (\n        <Menu secondary stackable>\n          <Menu.Item>\n            <Link to='/dashboard'>Profile</Link>\n          </Menu.Item>\n          <Dropdown closeOnChange item text='Open Tickets'>\n            <Dropdown.Menu>\n              <Dropdown.Item >\n                <Link to='/tickets/my-tickets'>\n                  My Tickets\n                </Link>\n              </Dropdown.Item>\n              <Dropdown.Item>\n                <Link to='/tickets/solved-tickets'>\n                  Solved Tickets\n                </Link>\n              </Dropdown.Item>\n            </Dropdown.Menu>\n          </Dropdown>\n          <Menu.Item>\n            <Item>Office Hours</Item>\n          </Menu.Item>\n          <Menu.Menu position='right'>\n            <Menu.Item>\n              <Input\n                icon='search'\n                placeholder='Search...' />\n            </Menu.Item>\n            <Menu.Item\n              name='logout'\n              active={ activeItem === 'logout' }\n              onClick={ () => this.logout() }\n            />\n          </Menu.Menu>\n        </Menu>)\n    } else if (this.props.activeUser !== null && this.props.activeUser.student) {\n      const { activeItem } = this.state\n      return (\n        <Menu secondary stackable>\n          <Menu.Item>\n            <Link to='/dashboard'>Profile</Link>\n          </Menu.Item>\n          <Dropdown closeOnChange item text='Open Tickets'>\n            <Dropdown.Menu>\n              <Dropdown.Item >\n                <Link to='/tickets/my-tickets'>\n                  My Tickets\n                </Link>\n              </Dropdown.Item>\n              <Dropdown.Item>\n                <Link to='/tickets/solved-tickets'>\n                  Solved Tickets\n                </Link>\n              </Dropdown.Item>\n            </Dropdown.Menu>\n          </Dropdown>\n          <Menu.Menu position='right'>\n            <Menu.Item>\n              <Input\n                icon='search'\n                placeholder='Search...'\n                onKeyUp={ e => this.handleSearch(e) }\n              />\n            </Menu.Item>\n            <Menu.Item\n              name='logout'\n              active={ activeItem === 'logout' }\n              onClick={ () => this.logout() }\n            />\n          </Menu.Menu>\n        </Menu>)\n    } else {\n      return null\n    }\n  }\n\n  isAuthenticated = () => { return sessionStorage.getItem(\"user\") !== null }\n\n  render() {\n\n\n    return (\n      <div className=\"navigation-bar\" ref={ this.contextRef }>\n        <Sticky context={ this.contextRef }>\n          { this.handleNavView() }\n        </Sticky>\n      </div >\n    )\n  }\n}\n\nexport default withRouter(MenuNav)","import React, { Component } from 'react';\nimport { Card, Image, Button, Form, TextArea } from 'semantic-ui-react';\nimport moment from 'moment';\nimport '../../tickets/tickets.css';\n\nexport default class TicketList extends Component {\n\n  state = {\n    userId: this.props.userId,\n    classId: this.props.classId,\n    ticketComplete: this.props.ticketComplete,\n    ticketTitle: this.props.ticketTitle,\n    ticketBody: this.props.ticketBody,\n    submitTime: this.props.submitTime,\n    linked: this.props.linked,\n    solutionNotes: this.props.solutionNotes\n  };\n\n  submitTimeInterval = {};\n  //studentWaitingOnTeacherInterval = {};\n\n  componentWillUnmount = () => {\n    clearInterval(this.submitTimeInterval);\n  };\n\n  componentDidMount = () => {\n    this.checkSubmitTime();\n  }\n\n  checkSubmitTime = () => {\n    this.submitTimeInterval = setInterval(() => {\n      this.setState(this.state)\n    }, 15000)\n  }\n\n  handleAssign = () => {\n    this.props.addTeacherTicket({\n      ticketId: this.props.item.id,\n      userId: this.props.activeUser.id,\n    })\n  };\n\n  handleJoinTicket = () => {\n    this.props.addJoin({\n      userId: this.props.activeUser.id,\n      ticketId: this.props.item.id\n    })\n  };\n\n  handleRemoveJoinTicket = () => {\n    this.props.deleteJoin(this.props.joinedTicketId)\n  };\n\n  handleEdit = () => {\n    this.props.handleOpenModal(true);\n    this.props.editTicketState({\n      image: this.props.image,\n      userId: this.props.item.userId,\n      classId: this.props.item.classId,\n      ticketComplete: false,\n      ticketTitle: this.props.item.ticketTitle,\n      ticketBody: this.props.item.ticketBody,\n      submitTime: this.props.item.submitTime,\n      linked: this.props.item.linked,\n      solutionNotes: this.props.item.solutionNotes,\n      id: this.props.item.id\n    })\n  };\n\n  handleStudentSolve = () => {\n    this.props.editTicket({\n      userId: this.props.item.userId,\n      classId: this.props.item.classId,\n      ticketComplete: true,\n      ticketTitle: this.props.item.ticketTitle,\n      ticketBody: this.props.item.ticketBody,\n      submitTime: this.props.item.submitTime,\n      linked: this.props.item.linked,\n      solutionNotes: this.state.solutionNotes,\n      id: this.props.item.id\n    })\n  };\n\n  getUserImage = () => {\n    let images;\n    if (typeof (this.props.image) === \"object\") {\n      images = this.props.image.map((image, index) => {\n        return (<div className=\"user-image-inline\" key={ index }><Image className=\"avatar\" key={ index } src={ image } /></div>)\n      });\n    } else {\n      images = <Image className=\"avatar\" src={ this.props.image } />\n    }\n\n    return images;\n  };\n\n  handleMyTicketView = () => {\n    if (this.props.item.userId === this.props.activeUser.id) {\n      return (<>\n        <Form>\n          <TextArea\n            label='Solution Notes'\n            placeholder='Solution Notes'\n            defaultValue={ this.props.item.solutionNotes }\n            onChange={ (e) => this.setState({ solutionNotes: e.target.value }) }\n          />\n        </Form>\n        <Button className=\"steel\" onClick={ this.handleEdit }>Edit</Button>\n        <Button className=\"trolley\" onClick={ this.handleStudentSolve }>Marked Solved</Button>\n      </>)\n\n    } if (!this.props.showRemoveJoin) {\n      return (<Button className=\"laurel\" onClick={ this.handleJoinTicket }>Join Ticket</Button>)\n    }\n    else if (this.props.showRemoveJoin) {\n      return (<Button onClick={ this.handleRemoveJoinTicket }>Remove Join</Button>)\n    }\n  };\n\n  handleCardLength = () => {\n    let parsedDate = moment(this.props.item.submitTime, 'MMMM Do YYYY, h:mm:ss a');\n    let time = moment().diff(parsedDate, 'minutes');\n    if (time > 3) {\n      clearInterval(this.submitTimeInterval);\n      return \"rose\"\n    } else if (time > 2) {\n      return \"straw\"\n    } else if (time > 1) {\n      return \"steel\"\n    }\n  }\n\n  handleTicketView = () => {\n    //teacher ticket view\n    if (this.props.activeUser !== null && this.props.activeUser.student === false) {\n\n      return (\n        <Card centered fluid raised key={ this.props.item.id } className={ this.handleCardLength() }>\n          <div className=\"user-image-container\">{ this.getUserImage() }</div>\n          <Card.Content>\n            <Card.Header>{ this.props.item.ticketTitle }</Card.Header>\n            <Card.Description>{ this.props.item.ticketBody }</Card.Description>\n            <Card.Meta>{ this.props.item.submitTime }</Card.Meta>\n            <Button className=\"trolley\" onClick={ this.handleAssign }>Assign</Button>\n          </Card.Content>\n        </Card>\n      )\n      //student ticket view\n    } else if (this.props.activeUser !== null && this.props.activeUser.student) {\n      let cardColor = \"\";\n      if (this.props.item.userId === this.props.activeUser.id) {\n        cardColor = \"steel\";\n      } else if (this.props.hasMultipleJoins !== null && this.props.hasMultipleJoins) {\n        cardColor = \"laurel\";\n      }\n\n      return (\n        <Card centered fluid raised key={ this.props.item.id } className={ cardColor }>\n          <div className=\"user-image-container\">{ this.getUserImage() }</div>\n          <Card.Content>\n            <Card.Header>{ this.props.item.ticketTitle }</Card.Header>\n            <Card.Description>{ this.props.item.ticketBody }</Card.Description>\n            <Card.Meta>{ this.props.item.submitTime }</Card.Meta>\n            { this.handleMyTicketView() }\n          </Card.Content>\n        </Card>\n      )\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        { this.handleTicketView() }\n      </div>\n    )\n  }\n}","import React, { Component } from 'react';\nimport { Modal, Button, Image, Icon, Input, Form, TextArea } from 'semantic-ui-react';\n\nexport default class EditTicket extends Component {\n  state = {\n    active: this.props.openModal,\n    userId: this.props.editTicketItem.userId,\n    classId: this.props.editTicketItem.classId,\n    ticketComplete: false,\n    ticketTitle: this.props.editTicketItem.ticketTitle,\n    ticketBody: this.props.editTicketItem.ticketBody,\n    submitTime: this.props.editTicketItem.submitTime,\n    linked: this.props.editTicketItem.linked,\n    solutionNotes: this.props.editTicketItem.solutionNotes,\n    id: this.props.editTicketItem.id,\n    opened: false\n  }\n\n  onCloseModal = () => {\n    this.props.handleOpenCloseModal(false);\n    this.setState({ opened: false });\n  }\n\n  handleEdit = () => {\n    this.props.editTicket({\n      userId: this.props.editTicketItem.userId,\n      classId: this.props.editTicketItem.classId,\n      ticketComplete: false,\n      ticketTitle: this.state.ticketTitle,\n      ticketBody: this.state.ticketBody,\n      submitTime: this.props.editTicketItem.submitTime,\n      linked: this.props.editTicketItem.linked,\n      solutionNotes: this.props.editTicketItem.solutionNotes === undefined ? \"\" : this.props.editTicketItem.solutionNotes,\n      id: this.props.editTicketItem.id\n    })\n    this.onCloseModal()\n  }\n\n  componentDidUpdate() {\n    if (this.props.editTicketItem.id != null && this.props.openModal && this.state.opened === false) {\n      this.setState({\n        active: this.props.openModal,\n        userId: this.props.editTicketItem.userId,\n        classId: this.props.editTicketItem.classId,\n        ticketComplete: false,\n        ticketTitle: this.props.editTicketItem.ticketTitle,\n        ticketBody: this.props.editTicketItem.ticketBody,\n        submitTime: this.props.editTicketItem.submitTime,\n        linked: this.props.editTicketItem.linked,\n        solutionNotes: this.props.editTicketItem.solutionNotes,\n        id: this.props.editTicketItem.id,\n        opened: true\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Modal className=\"tiny\" open={ this.props.openModal } onClose={ this.onCloseModal } >\n          <Icon name=\"close\" onClick={ this.onCloseModal } />\n          <Modal.Header>Edit Ticket</Modal.Header>\n          <Modal.Content>\n            <Image className=\"ui avatar image ticket-edit-image\" src={ this.props.editTicketItem.image } />\n            <Modal.Description className=\"ticket-edit-fields\">\n              <label>Ticket Title: </label>\n              <Input\n                type=\"text\"\n                className=\"fluid\"\n                onChange={ (e) => {\n                  this.setState({ ticketTitle: e.target.value })\n                }\n                }\n                defaultValue={ this.props.editTicketItem.ticketTitle } />\n              <label>Ticket Body: </label>\n              <Form>\n                <TextArea\n                  className=\"fluid\"\n                  onChange={ (e) => {\n                    this.setState({ ticketBody: e.target.value })\n                  }\n                  }\n                  defaultValue={ this.props.editTicketItem.ticketBody } />\n              </Form>\n            </Modal.Description>\n          </Modal.Content>\n          <Modal.Actions>\n            <Button className=\"rose\" onClick={ this.onCloseModal }>Cancel</Button>\n            <Button className=\"laurel\" onClick={ this.handleEdit }>Save</Button>\n          </Modal.Actions>\n        </Modal>\n      </div>\n    );\n  }\n}","import React, { Component } from 'react';\nimport { Modal, Button, Icon, Image } from 'semantic-ui-react';\n\nexport default class NotifyModal extends Component {\n  state = {\n    active: this.props.openModal,\n  }\n\n  onCloseModal = () => {\n    this.props.handleNotifyModal(false);\n  }\n\n  render() {\n    let teacher = {};\n    if (this.props.notifyTicketItem !== null && this.props.notifyTicketItem !== undefined) {\n      this.props.allTeacherTickets.forEach((join) => {\n        if (join.ticketId === this.props.notifyTicketItem.id) {\n          this.props.allUsers.forEach((user) => {\n            if (user.id === join.userId) {\n              teacher = user;\n            }\n          })\n        }\n      })\n    }\n    return (\n      <div>\n        <Modal size='tiny' basic open={ this.props.openNotify } onClose={ this.onCloseModal } >\n          <Icon name=\"close\" onClick={ this.onCloseModal } />\n          <Modal.Header>You're Up!</Modal.Header>\n          <Modal.Content>\n            <Image className=\"ui avatar image ticket-edit-image\" src={ teacher.image } />\n            <p>Please see { teacher.name } for help with { this.props.notifyTicketItem !== null && this.props.notifyTicketItem !== undefined ? this.props.notifyTicketItem.ticketTitle : \"\" }</p>\n          </Modal.Content>\n          <Modal.Actions>\n            <Button floated='right' onClick={ this.onCloseModal }>Got It</Button>\n          </Modal.Actions>\n        </Modal>\n      </div>\n    );\n  }\n}","import React, { Component } from 'react';\nimport TicketItem from './ticketItem';\nimport EditTicket from './editTicketModal';\nimport NotifyModal from './notifyTicketModal'\nimport '../../tickets/tickets.css';\n\n\nclass OpenTicketHeader extends Component {\n  render() {\n    return <h1>Open Tickets</h1>;\n  }\n}\n\nexport default class TicketList extends Component {\n  state = {\n    openModal: false,\n    openNotify: false,\n    editTicketItem: {},\n    notifyTicketItem: {}\n  };\n\n  editTicketState = (editItem) => {\n    this.setState({\n      editTicketItem: editItem\n    })\n  }\n\n  handleOpenCloseModal = (open) => {\n    this.setState({\n      openModal: open\n    });\n  }\n\n  handleNotifyModal = (open, ticketNotify) => {\n    if (open && sessionStorage.notifyModalOpenAlready === \"true\")\n      return;\n\n    if (open) {\n      sessionStorage.setItem(\"notifyModalOpenAlready\", true);\n    }\n\n    this.setState({\n      openNotify: open,\n      notifyTicketItem: ticketNotify\n    });\n  }\n\n  componentWillMount() {\n    sessionStorage.setItem(\"notifyModalOpenAlready\", false);\n  }\n\n  render() {\n    let teacherHadYourTicket = false;\n    let numOfTeachHadTicket = 0;\n    let ticketNotify = {};\n\n    let openTicket = this.props.allTickets.filter((ticket) => {\n      //the logged in user is assigned to a ticket\n      let currentUserIsTeacherWithTicket = false;\n      let isTicketAssignedToSomeone = false;\n      let teacherHadTicket = false;\n\n      //iterate over joined table\n      this.props.allTeacherTickets.forEach((join) => {\n        //both keys in joined table equal\n\n        if (join.ticketId === ticket.id && join.userId === this.props.activeUser.id && ticket.classId === this.props.activeUser.classId) {\n          teacherHadTicket = true;\n          currentUserIsTeacherWithTicket = true;\n        }\n        else if (join.ticketId === ticket.id) {\n          teacherHadTicket = true;\n          isTicketAssignedToSomeone = true;\n        }\n      })\n\n      if (ticket.ticketComplete === false && teacherHadTicket && ticket.userId === this.props.activeUser.id) {\n        teacherHadYourTicket = true;\n        numOfTeachHadTicket++;\n        ticketNotify = ticket;\n      }\n\n      if (ticket.ticketComplete === false && (!currentUserIsTeacherWithTicket && isTicketAssignedToSomeone === false)) {\n        return ticket;\n      }\n      //resolves react warning regarding return after arrow function\n      return null;\n    });\n\n    if (teacherHadYourTicket && this.state.openNotify === false) {\n      setTimeout(() => {\n        this.handleNotifyModal(true, ticketNotify);\n        console.log(numOfTeachHadTicket);\n      }, 0)\n    }\n\n    let classTickets = openTicket.map((item, index) => {\n      let hasMultipleJoins = false;\n      let images = [];\n      let joinedTicketId = 0\n      let showRemoveJoin = false;\n\n      //keeps the creator of the ticket first in image render\n      this.props.allUsers.forEach((user) => {\n        if (item.userId === user.id) {\n          images.push(user.image);\n        }\n      });\n\n      this.props.allUsers.forEach((user) => {\n        this.props.joinedTickets.forEach((join) => {\n          if (item.id === join.ticketId && join.userId === user.id) {\n            images.push(user.image);\n          }\n\n          if (item.id === join.ticketId && join.userId === this.props.activeUser.id) {\n            showRemoveJoin = true;\n            joinedTicketId = join.id\n          }\n        });\n      })\n\n      if (images.length > 1)\n        hasMultipleJoins = true;\n\n      return (\n        <TicketItem\n          { ...this.props }\n          key={ index }\n          item={ item }\n          index={ index }\n          image={ images }\n          editTicketState={ this.editTicketState }\n          handleOpenModal={ this.handleOpenCloseModal }\n          handleNotifyModal={ this.handleNotifyModal }\n          hasMultipleJoins={ hasMultipleJoins }\n          showRemoveJoin={ showRemoveJoin }\n          joinedTicketId={ joinedTicketId }\n        />\n      );\n    });\n\n    return (\n      <div className=\"new-ticket-container\">\n        <OpenTicketHeader />\n        <span> { classTickets } </span>\n        <EditTicket\n          { ...this.props }\n          editTicketItem={ this.state.editTicketItem }\n          handleOpenCloseModal={ this.handleOpenCloseModal }\n          openModal={ this.state.openModal }\n        />\n        <NotifyModal\n          { ...this.props }\n          notifyTicketItem={ this.state.notifyTicketItem }\n          handleNotifyModal={ this.handleNotifyModal }\n          openNotify={ this.state.openNotify }\n        />\n      </div>\n    );\n  }\n}","import React, { Component } from 'react';\nimport { Button, Card, Image, Form, TextArea } from 'semantic-ui-react';\n\nexport default class CurrentTicketItem extends Component {\n\n  state = {\n    userId: '',\n    classId: '',\n    ticketComplete: '',\n    ticketTitle: '',\n    ticketBody: '',\n    submitTime: '',\n    linked: '',\n    solutionNotes: ''\n  };\n\n  handleComplete = () => {\n    this.props.editTicket({\n      userId: this.props.item.userId,\n      classId: this.props.item.classId,\n      ticketComplete: true,\n      ticketTitle: this.props.item.ticketTitle,\n      ticketBody: this.props.item.ticketBody,\n      submitTime: this.props.item.submitTime,\n      linked: this.props.item.linked,\n      solutionNotes: this.state.solutionNotes,\n      id: this.props.item.id\n    })\n  };\n\n  handleReassign = () => {\n    this.props.removeTeacherTicket(this.props.item.teacherTicketJoinId)\n    this.props.editTicket({\n      userId: this.props.item.userId,\n      classId: this.props.item.classId,\n      ticketComplete: false,\n      ticketTitle: this.props.item.ticketTitle,\n      ticketBody: this.props.item.ticketBody,\n      submitTime: this.props.item.submitTime,\n      linked: this.props.item.linked,\n      solutionNotes: this.state.solutionNotes,\n      id: this.props.item.id\n    })\n  };\n\n  getUserImage = () => {\n    let images;\n    if (typeof (this.props.image) === \"object\") {\n      images = this.props.image.map((image, index) => {\n        return (<div className=\"user-image-inline\" key={ index }><Image className=\"avatar\" key={ index } src={ image } /></div>)\n      });\n    } else {\n      images = <Image className=\"avatar\" src={ this.props.image } />\n    }\n\n    return images;\n  };\n\n\n  render() {\n    return (\n      <div>\n        <Card centered fluid raised key={ this.props.item.id } >\n          <div className=\"user-image-container\">{ this.getUserImage() }</div>\n          <Card.Content>\n            <Card.Header>{ this.props.item.ticketTitle }</Card.Header>\n            <Card.Description>{ this.props.item.ticketBody }</Card.Description>\n            <Card.Meta>{ this.props.item.submitTime }</Card.Meta>\n            <Form>\n              <TextArea\n                label='Solution Notes'\n                placeholder='Solution Notes'\n                defaultValue={ this.props.item.solutionNotes }\n                onChange={ (e) => this.setState({ solutionNotes: e.target.value }) }\n              />\n            </Form>\n            <Button className=\"rose\" onClick={ this.handleReassign } >Reassign</Button>\n            <Button className=\"trolley\" onClick={ this.handleComplete } >Complete</Button>\n          </Card.Content>\n        </Card>\n      </div>\n    )\n  }\n}","import React, { Component } from 'react';\nimport CurrentTicketItem from './currentTicketItem'\n\nclass CurrentTicketHeader extends Component {\n\n  render() {\n    return <h1>Current Ticket</h1>;\n  }\n}\n\nexport default class TicketForm extends Component {\n\n  render() {\n    let teacherTicketJoinId = 0;\n    let openTicket = this.props.allTickets.filter((ticket) => {\n      let currentUserIsTeacherWithTicket = false;\n      this.props.allTeacherTickets.forEach((join) => {\n        if (join.ticketId === ticket.id && join.userId === this.props.activeUser.id) {\n          currentUserIsTeacherWithTicket = true;\n          teacherTicketJoinId = join.id;\n        }\n      })\n      if (ticket.ticketComplete === false && currentUserIsTeacherWithTicket) {\n        ticket.teacherTicketJoinId = teacherTicketJoinId\n        return ticket;\n      }\n      //resolves react warning regarding return after arrow function\n      return null;\n    });\n\n    let currentTickets = openTicket.map((item, index) => {\n      let hasMultipleJoins = false;\n      let images = [];\n\n      //keeps the creator of the ticket first in image render\n      this.props.allUsers.forEach((user) => {\n        if (item.userId === user.id) {\n          images.push(user.image);\n        }\n      });\n\n      this.props.allUsers.forEach((user) => {\n        this.props.joinedTickets.forEach((join) => {\n          if (item.id === join.ticketId && join.userId === user.id) {\n            images.push(user.image);\n          }\n        });\n      })\n      if (images.length > 1)\n        hasMultipleJoins = true;\n\n      return (\n        <CurrentTicketItem\n          { ...this.props }\n          key={ index }\n          item={ item }\n          index={ index }\n          image={ images }\n          editTicketState={ this.editTicketState }\n          handleOpenModal={ this.handleOpenCloseModal }\n          hasMultipleJoins={ hasMultipleJoins }\n        />\n      );\n    });\n\n\n    return (\n      <div className=\"current-ticket-container\">\n        <CurrentTicketHeader />\n        <span> { currentTickets } </span>\n      </div>\n    )\n  }\n}","import React, { Component } from 'react';\nimport { withRouter } from 'react-router';\nimport { Form, Grid, Button, Message } from 'semantic-ui-react';\nimport moment from 'moment';\nimport '../tickets/tickets.css';\n\nconst displayStyle = {\n  display: \"none\"\n}\n\nconst FormSuccess = () => (\n  <Form style={ displayStyle } className=\"ticketFormSuccess\" success >\n    <Message success header='Form Completed' content=\"Your ticket is now in queue\" />\n  </Form >\n)\n\nclass FormHeader extends Component {\n  render() {\n    return <h1>Submit a New Ticket</h1>;\n  }\n}\n\nclass TicketForm extends Component {\n\n  newTicket = () => {\n    this.props.addTicket({\n      userId: this.props.activeUser.id,\n      classId: this.props.activeUser.classId,\n      ticketComplete: false,\n      ticketTitle: this.state.ticketTitle,\n      ticketBody: this.state.ticketBody,\n      submitTime: moment(new Date()).format('MMMM Do YYYY, h:mm:ss a'),\n      open: true,\n      linked: false,\n      solutionNotes: null\n    })\n      .then(() => {\n        setTimeout(() => {\n          document.querySelector(\".ticketFormSuccess\").style.display = \"block\";\n          document.querySelector(\".form-fields\").reset();\n          setTimeout(() => {\n            document.querySelector(\".ticketFormSuccess\").style.display = \"none\";\n          }, 1000)\n        }, 200)\n      })\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"new-ticket-container\">\n          <FormHeader />\n          <Grid>\n            <Grid.Row centered>\n              <Grid.Column>\n                <Form className=\"form-fields fluid\" onSubmit={ this.newTicket }>\n                  <Form.Field\n                    control=\"input\"\n                    type=\"text\"\n                    label=\"Ticket Title\"\n                    onChange={ (e) => this.setState({ ticketTitle: e.target.value }) }\n                    placeholder=\"Ticket Title\" />\n                  <Form.Field\n                    control=\"textarea\"\n                    type=\"text\"\n                    label=\"Ticket Body\"\n                    onChange={ (e) => this.setState({ ticketBody: e.target.value }) }\n                    placeholder=\"Ticket Body\" />\n                  <Button className=\"trolley\" type=\"submit\" content=\"Save\" floated=\"right\" />\n                </Form>\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n          <FormSuccess />\n        </div>\n      </>\n    )\n  }\n}\n\nexport default withRouter(TicketForm)","import React, { Component } from 'react';\nimport TicketList from './ticketList';\nimport CurrentTicket from './currentTicket';\nimport NewTicket from '../ticketForm'\nimport '../../tickets/tickets.css';\n\nexport default class TicketContainer extends Component {\n\n  handleView = () => {\n    //teacher view\n    if (this.props.activeUser !== null && this.props.activeUser.student === false) {\n      return (\n        <div className='ticket-list'>\n          <TicketList { ...this.props } />\n          <CurrentTicket { ...this.props } />\n        </div>\n      )\n      //student view\n    } else if (this.props.activeUser !== null && this.props.activeUser.student) {\n      return (\n        <div className='ticket-list'>\n          <TicketList { ...this.props } />\n          <NewTicket { ...this.props } />\n        </div>\n      )\n    }\n  }\n\n  render() {\n    return (\n      <>\n        { this.handleView() }\n      </>\n    );\n  }\n}","import firebase from 'firebase/app';\nimport 'firebase/database';\nimport 'firebase/auth';\n\nexport default {\n  getTicket(ticketId) {\n    return firebase.database().ref('/tickets/' + ticketId).once('value').then(function (snapshot) {\n      return snapshot.val();\n    });\n  },\n\n  saveTicket(obj) {\n    let newTicketKey = firebase.database().ref().child('tickets').push().key;\n    obj.id = newTicketKey;\n    let database = firebase.database();\n\n    return database.ref('tickets/' + newTicketKey).set(obj);\n  },\n\n  editTicket(editedTicket) {\n    let updates = {};\n    updates[\"/tickets/\" + editedTicket.id] = editedTicket;\n    return firebase.database().ref().update(updates).then(() => {\n      return this.getTicket(editedTicket.id);\n    });\n  },\n\n  search(inputValue) {\n    return firebase.database().ref('/tickets/').once('value').then(function (snapshot) {\n      let tickets = snapshot;\n      let ticketArr = [];\n      let allTickets = tickets.val();\n      for (let ticket in allTickets) {\n        ticketArr.push(allTickets[ticket]);\n      }\n\n      return ticketArr.filter((ticket) => {\n        if (ticket === null || ticket === undefined)\n          return null;\n\n        if (ticket.ticketBody.toUpperCase().indexOf(inputValue.toUpperCase()) > -1 || ticket.ticketTitle.toUpperCase().indexOf(inputValue.toUpperCase()) > -1 ||\n          (ticket.hasOwnProperty(\"solutionNotes\") && ticket.solutionNotes.toUpperCase().indexOf(inputValue.toUpperCase()) > -1)) {\n          return ticket;\n        }\n\n        return null;\n      })\n    });\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Input } from 'semantic-ui-react';\nimport 'firebase/auth';\nimport './dashboard.css';\n\nexport default class UserProfile extends Component {\n  state = {\n    name: \"\",\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    newPassword: \"\",\n    image: \"\",\n    blurb: \"\",\n    available: \"\",\n    student: \"\"\n  }\n\n  displayConditions = () => {\n    if (this.props.editMode) {\n      //edit mode true\n      return <div>\n        <Card centered fluid className=\"card-dash\">\n          <div className=\"input-fields\">\n            <div>\n              <span>\n                <label>Name: </label>\n                <Input type=\"text\" id=\"name\" defaultValue={ this.props.activeUser.name } />\n              </span>\n            </div>\n            <div>\n              <span>\n                <label>Userame: </label>\n                <Input type=\"text\" id=\"username\" defaultValue={ this.props.activeUser.username } />\n              </span>\n            </div>\n            <div>\n              <span>\n                <label>Blurb: </label>\n                <Input type=\"text\" id=\"blurb\" defaultValue={ this.props.activeUser.blurb } />\n              </span>\n            </div>\n            <div>\n              <span>\n                <label>Email: </label>\n                <Input type=\"text\" id=\"email\" defaultValue={ this.props.activeUser.email } />\n              </span>\n            </div>\n            <div>\n              <span>\n                <label>Current Password: </label>\n                <Input type=\"password\" id=\"password\" />\n              </span>\n            </div>\n            <div>\n              <span>\n                <label>New Password: </label>\n                <Input type=\"password\" id=\"newPassword\" />\n              </span>\n            </div>\n          </div>\n        </Card>\n      </div >\n    } else {\n      //edit mode false\n      return <div>\n        <Card centered fluid className=\"card-dash\">\n          <span>\n            <label>Name: </label>\n            { this.props.activeUser.name }\n          </span>\n          <span>\n            <label>Userame: </label>\n            { this.props.activeUser.username }\n          </span>\n          <span>\n            <label>Blurb: </label>\n            { this.props.activeUser.blurb }\n          </span>\n          <span>\n            <label>Email: </label>\n            { this.props.activeUser.email }\n          </span>\n        </Card>\n      </div >\n\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        { this.displayConditions() }\n      </div>\n    );\n  }\n}","import React, { Component } from 'react';\nimport { Card, Image, Form } from 'semantic-ui-react';\nimport './dashboard.css';\n\nexport default class UserImage extends Component {\n  state = {\n    image: \"\"\n  }\n\n  displayConditions = () => {\n    if (this.props.editMode) {\n      //edit mode true\n      return (\n        <Card centered fluid className=\"card-dash\">\n          <Card.Content>\n            <Card.Description>\n              <Form.Field\n                className=\"choose-upload-button\"\n                control=\"input\"\n                type=\"file\"\n                label=\"Photo\"\n                //files don't use .value and come through as an array\n                onChange={ (e) => this.setState({ image: e.target.files[0] }) }\n                placeholder=\"Photo\" />\n              <Form.Field control=\"input\" type=\"hidden\" />\n            </Card.Description>\n          </Card.Content>\n        </Card>\n      )\n    } else {\n      //edit mode false\n      return (\n        <Card centered fluid className=\"card-dash\">\n          <Image centered size='small' src={ this.props.activeUser.image } alt=\"user profile\" className=\"user-image\" />\n        </Card>\n      )\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        { this.displayConditions() }\n      </div>\n    );\n  }\n}","import React, { Component } from 'react';\nimport { Button, Container } from 'semantic-ui-react';\nimport UserProfile from './userProfile';\nimport UserImage from './userImage';\nimport * as firebase from 'firebase/app';\nimport 'firebase/storage';\nimport './dashboard.css';\n\nexport default class TeacherContainer extends Component {\n  storageRef = firebase.storage().ref('userImage');\n  state = {\n    editMode: false,\n    editModeImage: false\n  }\n\n  handleEditState = () => {\n    this.setState(\n      { editMode: true }\n    )\n  }\n\n  handleEditImage = () => {\n    this.setState(\n      { editModeImage: true }\n    )\n  }\n\n  handleSaveImage = () => {\n    const imageUploadFiles = document.querySelector(\".choose-upload-button input[type='file']\").files\n    if (imageUploadFiles.length > 0) {\n      const ref = this.storageRef.child(`${Date.now()}`);\n\n      ref.put(imageUploadFiles[0])\n        .then(data => data.ref.getDownloadURL())\n        .then(url => {\n          this.props.editUser({\n            id: this.props.activeUser.id,\n            name: this.props.activeUser.name,\n            username: this.props.activeUser.username,\n            blurb: this.props.activeUser.blurb,\n            email: this.props.activeUser.email,\n            password: null,\n            image: url,\n            available: this.props.activeUser.available,\n            student: this.props.activeUser.student\n          })\n        })\n    }\n    this.setState(\n      { editModeImage: false }\n    )\n  }\n\n  reauthenticate = (currentPassword) => {\n    const user = firebase.auth().currentUser;\n    const cred = firebase.auth.EmailAuthProvider.credential(\n      user.email, currentPassword);\n    return user.reauthenticateWithCredential(cred);\n  }\n\n  changePassword = (currentPassword, newPassword) => {\n    this.reauthenticate(currentPassword).then(() => {\n      const user = firebase.auth().currentUser;\n      user.updatePassword(newPassword).then(() => {\n        alert(\"Password updated!\");\n      }).catch((error) => { console.log(error); });\n    }).catch((error) => { console.log(error); });\n  }\n\n  changeEmail = (currentPassword, newEmail) => {\n    this.reauthenticate(currentPassword).then(() => {\n      const user = firebase.auth().currentUser;\n      user.updateEmail(newEmail).then(() => {\n        console.log(\"Email updated!\");\n      }).catch((error) => { console.log(error); });\n    }).catch((error) => { console.log(error); });\n  }\n\n  handleSaveState = () => {\n    const name = document.querySelector(\"#name\").value\n    const username = document.querySelector(\"#username\").value\n    const blurb = document.querySelector(\"#blurb\").value\n    const email = document.querySelector(\"#email\").value\n    const password = document.querySelector(\"#password\").value\n    const newPassword = document.querySelector(\"#newPassword\").value\n    if (password === \"\" && email !== this.props.activeUser.email) {\n      alert(`please enter you password to change your email`)\n      return\n    }\n\n    if (password === \"\" && newPassword !== \"\") {\n      alert(`please enter you password to change your password`)\n      return\n    }\n\n    this.props.editUser({\n      id: this.props.activeUser.id,\n      name: name,\n      username: username,\n      blurb: blurb,\n      email: email,\n      password: null,\n      image: this.props.activeUser.image,\n      available: this.props.activeUser.available,\n      student: this.props.activeUser.student\n    })\n    if (password !== \"\" && newPassword !== \"\" && password !== newPassword)\n      this.changePassword(password, newPassword)\n\n    if (password !== \"\" && email !== this.props.activeUser.email)\n      this.changeEmail(password, email)\n\n    this.setState(\n      { editMode: false }\n    )\n  }\n\n  render() {\n    return (\n\n      <Container className=\"profile-container\">\n        <h1>Welcome back { this.props.activeUser.name }</h1>\n        <div className=\"image-section\">\n          <UserImage { ...this.props }\n            editMode={ this.state.editModeImage }\n          />\n          { this.state.editModeImage ? <Button className=\"trolley\" onClick={ this.handleSaveImage }>Save Image</Button> : <Button className=\"trolley\" onClick={ this.handleEditImage }>Edit Image</Button> }\n        </div>\n        <div className=\"input-fields-section\">\n          <UserProfile  { ...this.props }\n            editMode={ this.state.editMode }\n          />\n          { this.state.editMode ? <Button className=\"trolley\" onClick={ this.handleSaveState }>Save</Button> : <Button className=\"trolley\" onClick={ this.handleEditState }>Edit</Button> }\n        </div>\n      </Container>\n    );\n  }\n}\n","import firebase from 'firebase/app';\nimport 'firebase/database';\nimport 'firebase/auth';\n\nexport default {\n  getCurrentTicketUser(joinedId) {\n    return firebase.database().ref('/currentTicketUsers/' + joinedId).once('value').then(function (snapshot) {\n      return snapshot.val();\n    });\n  },\n\n  deleteCurrentTicketUser(id) {\n    return firebase.database().ref(\"currentTicketUsers/\" + id).remove();\n  },\n\n  saveCurrentTicketUser(obj) {\n    let newCurrentTicketUserKey = firebase.database().ref().child('currentTicketUsers').push().key;\n    obj.id = newCurrentTicketUserKey;\n    let database = firebase.database();\n\n    return database.ref('currentTicketUsers/' + newCurrentTicketUserKey).set(obj);\n  },\n\n  editCurrentTicketUser(editedCurrentTicketUser) {\n    let updates = {};\n    updates[\"/currentTicketUsers/\" + editedCurrentTicketUser.id] = editedCurrentTicketUser;\n    return firebase.database().ref().update(updates).then(() => {\n      return this.getCurrentTicketUser(editedCurrentTicketUser.id);\n    });\n  }\n}","import React, { Component } from 'react';\nimport { Card, Image } from 'semantic-ui-react';\nimport '../../../tickets/tickets.css';\n\nexport default class SolvedTicketList extends Component {\n  getUserImage = () => {\n    let images;\n    if (typeof (this.props.image) === \"object\") {\n      images = this.props.image.map((image, index) => {\n        return (<div className=\"user-image-inline\" key={ index }><Image className=\"avatar\" key={ index } src={ image } /></div>)\n      });\n    } else {\n      images = <Image className=\"avatar\" src={ this.props.image } />\n    }\n\n    return images;\n  };\n\n  render() {\n    return (\n      <Card centered fluid raised key={ this.props.item.id } >\n        <div className=\"user-image-container\">{ this.getUserImage() }</div>\n        <Card.Content>\n          <Card.Header>{ this.props.item.ticketTitle }</Card.Header>\n          <Card.Description>{ this.props.item.ticketBody }</Card.Description>\n          <Card.Description>Solution Notes: { this.props.item.solutionNotes }</Card.Description>\n          <Card.Meta>{ this.props.item.submitTime }</Card.Meta>\n        </Card.Content>\n      </Card>\n    )\n  }\n}","import React, { Component } from 'react';\nimport MySolvedTicketItem from './mySolvedTicketItem';\nimport '../../../tickets/tickets.css';\n\nclass MySolvedTicketHeader extends Component {\n  render() {\n    return <h1>My Solved Tickets</h1>;\n  }\n}\n\nexport default class MySolvedTicketList extends Component {\n  render() {\n    let solvedTicket = this.props.reverseTickets.filter((ticket) => {\n      //the logged in user is assigned to a ticket\n      let currentUserIsTeacherWithTicket = false;\n      //iterate over joined table\n      this.props.allTeacherTickets.forEach((join) => {\n        //both keys in joined table equal\n        if (join.ticketId === ticket.id && join.userId === this.props.activeUser.id)\n          currentUserIsTeacherWithTicket = true;\n      })\n\n      if (ticket.ticketComplete && currentUserIsTeacherWithTicket)\n        return ticket;\n      //resolves react warning regarding return after arrow function\n      return null;\n    });\n\n    let classTickets = solvedTicket.map((item, index) => {\n      let hasMultipleJoins = false;\n      let images = [];\n\n      //keeps the creator of the ticket first in image render\n      this.props.allUsers.forEach((user) => {\n        if (item.userId === user.id) {\n          images.push(user.image);\n        }\n      });\n\n      this.props.allUsers.forEach((user) => {\n        this.props.joinedTickets.forEach((join) => {\n          if (item.id === join.ticketId && join.userId === user.id) {\n            images.push(user.image);\n          }\n        });\n      })\n\n      if (images.length > 1)\n        hasMultipleJoins = true;\n\n      return (\n        <MySolvedTicketItem\n          { ...this.props }\n          key={ index }\n          item={ item }\n          index={ index }\n          image={ images }\n          hasMultipleJoins={ hasMultipleJoins }\n        />\n      );\n    });\n    return (\n      <div className=\"new-ticket-container\">\n        <MySolvedTicketHeader />\n        <span> { classTickets } </span>\n      </div>\n    );\n  }\n}","import React, { Component } from 'react';\nimport { Card, Image } from 'semantic-ui-react';\nimport '../../../tickets/tickets.css';\n\nexport default class SolvedTicketList extends Component {\n\n  getUserImage = () => {\n    let images;\n    if (typeof (this.props.image) === \"object\") {\n      images = this.props.image.map((image, index) => {\n        return (<div className=\"user-image-inline\" key={ index }><Image className=\"avatar floated left\" key={ index } src={ image } /></div>)\n      });\n    } else {\n      images = <Image className=\"avatar floated left\" src={ this.props.image } />\n    }\n\n    return images;\n  };\n\n  render() {\n    return (\n      <Card centered fluid raised key={ this.props.item.id } >\n        <div className=\"user-image-container\">{ this.getUserImage() }</div>\n        <Card.Content>\n          <Card.Header>{ this.props.item.ticketTitle }</Card.Header>\n          <Card.Description>{ this.props.item.ticketBody }</Card.Description>\n          <Card.Description>Solution Notes: { this.props.item.solutionNotes }</Card.Description>\n          <Card.Meta>{ this.props.item.submitTime }</Card.Meta>\n        </Card.Content>\n      </Card>\n    )\n  }\n}","import React, { Component } from 'react';\nimport AllSolvedTicketItem from './allSolvedTicketsItem';\nimport '../../../tickets/tickets.css';\n\nclass AllSolvedTicketHeader extends Component {\n  render() {\n    return <h1>All Solved Tickets</h1>;\n  }\n}\n\nexport default class AllSolvedTicketList extends Component {\n  render() {\n    let solvedTicket = this.props.reverseTickets.filter((ticket) => {\n      //the logged in user is assigned to a ticket\n      let currentUserIsTeacherWithTicket = false;\n      //iterate over joined table\n      this.props.allTeacherTickets.forEach((join) => {\n        //both keys in joined table equal\n        if (join.ticketId === ticket.id && join.userId === this.props.activeUser.id)\n          currentUserIsTeacherWithTicket = true;\n      })\n\n      if (ticket.ticketComplete && ticket.classId === this.props.activeUser.classId && !currentUserIsTeacherWithTicket)\n        return ticket;\n      //resolves react warning regarding return after arrow function\n      return null;\n    })\n\n    let classTickets = solvedTicket.map((item, index) => {\n      let image = \"\"\n      this.props.allUsers.forEach((user) => {\n        if (item.userId === user.id) {\n          image = user.image\n        }\n      })\n      return (\n        <AllSolvedTicketItem\n          { ...this.props }\n          key={ index }\n          item={ item }\n          index={ index }\n          image={ image }\n        />\n      );\n    });\n    return (\n      <div className=\"new-ticket-container\">\n        <AllSolvedTicketHeader />\n        <span> { classTickets } </span>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Image } from 'semantic-ui-react';\nimport '../../../tickets/tickets.css';\n\nexport default class SolvedTicketList extends Component {\n\n  getUserImage = () => {\n    let images;\n    if (typeof (this.props.image) === \"object\") {\n      images = this.props.image.map((image, index) => {\n        return (<div className=\"user-image-inline\" key={ index }><Image className=\"avatar\" key={ index } src={ image } /></div>)\n      });\n    } else {\n      images = <Image className=\"avatar\" src={ this.props.image } />\n    }\n\n    return images;\n  };\n\n  render() {\n    return (\n      <Card className=\"ticket-height\" centered fluid raised key={ this.props.item.id } >\n        <div className=\"user-image-container\">{ this.getUserImage() }</div>\n        <Card.Content>\n          <Card.Header>{ this.props.item.ticketTitle }</Card.Header>\n          <Card.Description>{ this.props.item.ticketBody }</Card.Description>\n          <Card.Description>Solution Notes: { this.props.item.solutionNotes }</Card.Description>\n          <Card.Meta>{ this.props.item.submitTime }</Card.Meta>\n        </Card.Content>\n      </Card>\n    )\n  }\n}","import React, { Component } from 'react';\nimport MySolvedTicketItem from './mySolvedTicketItem';\nimport '../../../tickets/tickets.css';\n\nclass MySolvedTicketHeader extends Component {\n  render() {\n    return <h1>My Solved Tickets</h1>;\n  }\n}\n\nexport default class MySolvedTicketList extends Component {\n  render() {\n    let solvedTicket = this.props.reverseTickets.filter((ticket) => {\n      if (ticket.ticketComplete && ticket.userId === this.props.activeUser.id)\n        return ticket;\n      //resolves react warning regarding return after arrow function\n      return null;\n    });\n\n    let classTickets = solvedTicket.map((item, index) => {\n      let image = \"\"\n      this.props.allUsers.forEach((user) => {\n        if (item.userId === user.id) {\n          image = user.image\n        }\n      })\n      return (\n        <MySolvedTicketItem\n          { ...this.props }\n          key={ index }\n          item={ item }\n          index={ index }\n          image={ image }\n        />\n      );\n    });\n    return (\n      <div className=\"new-ticket-container\">\n        <MySolvedTicketHeader />\n        <span> { classTickets } </span>\n      </div>\n    );\n  }\n}","import React, { Component } from 'react';\nimport { Card, Image } from 'semantic-ui-react';\nimport '../../../tickets/tickets.css';\n\nexport default class SolvedTicketList extends Component {\n\n  getUserImage = () => {\n    let images;\n    if (typeof (this.props.image) === \"object\") {\n      images = this.props.image.map((image, index) => {\n        return (<div className=\"user-image-inline\" key={ index }><Image className=\"avatar\" key={ index } src={ image } /></div>)\n      });\n    } else {\n      images = <Image className=\"avatar\" src={ this.props.image } />\n    }\n\n    return images;\n  };\n\n  getCardClass = () => {\n    if (this.props.extraClass) {\n      return \"ticket-height \" + this.props.extraClass;\n    } else {\n      return \"ticket-height\";\n    }\n  }\n\n  render() {\n    return (\n      <Card className={ this.getCardClass() } centered fluid raised key={ this.props.item.id } >\n        <div className=\"user-image-container\">{ this.getUserImage() }</div>\n        <Card.Content>\n          <Card.Header>{ this.props.item.ticketTitle }</Card.Header>\n          <Card.Description>{ this.props.item.ticketBody }</Card.Description>\n          <Card.Description>Solution Notes: { this.props.item.solutionNotes }</Card.Description>\n          <Card.Meta>{ this.props.item.submitTime }</Card.Meta>\n        </Card.Content>\n      </Card>\n    )\n  }\n}","import React, { Component } from 'react';\nimport AllSolvedTicketItem from './allSolvedTicketsItem';\nimport '../../../tickets/tickets.css';\n\nclass AllSolvedTicketHeader extends Component {\n  render() {\n    return <h1>All Solved Tickets</h1>;\n  }\n}\n\nexport default class AllSolvedTicketList extends Component {\n  render() {\n    let solvedTicket = this.props.reverseTickets.filter((ticket) => {\n      if (ticket.ticketComplete && ticket.classId === this.props.activeUser.classId && ticket.userId !== this.props.activeUser.id)\n        return ticket;\n      //resolves react warning regarding return after arrow function\n      return null;\n    })\n\n    let classTickets = solvedTicket.map((item, index) => {\n      let hasMultipleJoins = false;\n      let images = [];\n\n      //keeps the creator of the ticket first in image render\n      this.props.allUsers.forEach((user) => {\n        if (item.userId === user.id) {\n          images.push(user.image);\n        }\n      });\n\n      this.props.allUsers.forEach((user) => {\n        this.props.joinedTickets.forEach((join) => {\n          if (item.id === join.ticketId && join.userId === user.id) {\n            images.push(user.image);\n          }\n        });\n      })\n\n      if (images.length > 1)\n        hasMultipleJoins = true;\n\n      return (\n        <AllSolvedTicketItem\n          { ...this.props }\n          key={ index }\n          item={ item }\n          index={ index }\n          image={ images }\n          hasMultipleJoins={ hasMultipleJoins }\n        />\n      );\n    });\n    return (\n      <div className=\"new-ticket-container\">\n        <AllSolvedTicketHeader />\n        <span> { classTickets } </span>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport MySolvedTicketListTeacher from './teacher/mySolvedTicketsTeacher';\nimport AllSolvedTicketListTeacher from './teacher/allSolvedTicketsTeacher';\nimport MySolvedTicketListStudent from './student/mySolvedTicketsStudent'\nimport AllSolvedTicketListStudent from './student/allSolvedTicketsStudent';\nimport '../../tickets/tickets.css';\n\nexport default class SolvedTicketsContainer extends Component {\n\n  handleView = () => {\n    //teacher view\n    if (this.props.activeUser !== null && this.props.activeUser.student === false) {\n      return (\n        <div className='ticket-list'>\n          <MySolvedTicketListTeacher { ...this.props } />\n          <AllSolvedTicketListTeacher { ...this.props } />\n        </div>\n      )\n      //student view\n    } else if (this.props.activeUser !== null && this.props.activeUser.student) {\n      return (\n        <div className='ticket-list'>\n          <MySolvedTicketListStudent { ...this.props } />\n          <AllSolvedTicketListStudent { ...this.props } />\n        </div>\n      )\n    }\n  }\n\n  render() {\n    return (\n      <>\n        { this.handleView() }\n      </>\n    );\n  }\n}","import firebase from 'firebase/app';\nimport 'firebase/database';\nimport 'firebase/auth';\n\nexport default {\n  getJoinedTicket(joinedId) {\n    return firebase.database().ref('/joinedTickets/' + joinedId).once('value').then(function (snapshot) {\n      return snapshot.val();\n    });\n  },\n\n  deleteJoinedTicket(id) {\n    return firebase.database().ref(\"joinedTickets/\" + id).remove();\n  },\n\n  saveJoinedTicket(obj) {\n    let newJoinedTicketKey = firebase.database().ref().child('joinedTickets').push().key;\n    obj.id = newJoinedTicketKey;\n    let database = firebase.database();\n\n    return database.ref('joinedTickets/' + newJoinedTicketKey).set(obj);\n  },\n\n  editJoinedTicket(editedJoinedTicket) {\n    let updates = {};\n    updates[\"/joinedTickets/\" + editedJoinedTicket.id] = editedJoinedTicket;\n    return firebase.database().ref().update(updates).then(() => {\n      return this.getJoinedTicket(editedJoinedTicket.id);\n    });\n  }\n}","import React, { Component } from 'react';\nimport { Form, Button, Container, Grid, Segment, Header } from 'semantic-ui-react';\n\nexport default class StepOneUserDetails extends Component {\n  saveAndContinue = (e) => {\n    e.preventDefault()\n    this.props.nextStep()\n  }\n\n  render() {\n    const { values } = this.props;\n\n    return (\n      <Container className=\"auth-container ui grid container\">\n        <Grid.Row centered>\n          <Grid.Column className=\"six wide\" largeScreen={ 6 } computer={ 6 } tablet={ 10 } mobile={ 16 }>\n            <Segment>\n              <Header as=\"h1\" textAlign=\"center\">\n                User Details\n              </Header>\n\n              <Form className=\"register-form\">\n                <Form.Field\n                  control=\"input\"\n                  type=\"text\"\n                  label=\"Full Name\"\n                  placeholder=\"Enter your first and last name\"\n                  onChange={ this.props.handleChange('name') }\n                  defaultValue={ values.name }\n                />\n                <Form.Field\n                  control=\"input\"\n                  type=\"email\"\n                  label=\"Email Address\"\n                  placeholder=\"Enter an email\"\n                  onChange={ this.props.handleChange('email') }\n                  defaultValue={ values.email }\n                />\n                <Form.Field\n                  control=\"input\"\n                  type=\"password\"\n                  label=\"Password\"\n                  placeholder=\"Password\"\n                  onChange={ this.props.handleChange('password') }\n                />\n                <Button className=\"ui right floated trolley\" onClick={ this.saveAndContinue }>Save and Continue </Button>\n              </Form>\n              <div className=\"ui four steps\">\n                <div className=\"ui active step\">\n                  User Details\n                </div>\n                <div className=\"ui disabled step\">\n                  Class Details\n                </div>\n                <div className=\"ui disabled step\">\n                  Image\n                </div>\n                <div className=\"ui disabled step\">\n                  Confirm\n                </div>\n              </div>\n            </Segment>\n          </Grid.Column>\n        </Grid.Row>\n      </Container>\n\n    )\n  }\n}","import React, { Component } from 'react';\nimport { Form, Button, Container, Grid, Segment, Header, Dropdown, Card } from 'semantic-ui-react';\nimport './register.css'\n\nexport default class StepTwoClassDetails extends Component {\n  state = {\n    student: this.props.state.student,\n    classId: this.props.state.classId,\n    cohortName: this.props.state.cohortName\n  }\n\n  saveAndContinue = (e) => {\n    e.preventDefault();\n    this.props.nextStep();\n  }\n\n  back = (e) => {\n    e.preventDefault();\n    this.props.prevStep();\n  }\n\n  render() {\n    const { values } = this.props\n    const classes = this.props.allClasses.map((cohort, index) => {\n      return { key: index, text: cohort.cohortName, value: cohort.id };\n    })\n    return (\n      <Container className=\"auth-container ui grid container\">\n        <Grid.Row centered>\n          <Grid.Column className=\"six wide\" largeScreen={ 6 } computer={ 6 } tablet={ 10 } mobile={ 16 }>\n            <Segment>\n              <Header as=\"h1\" textAlign=\"center\">\n                Class Details\n              </Header>\n\n              <Form className=\"register-form\">\n                <Form.Field\n                  control=\"input\"\n                  type=\"text\"\n                  label=\"Username\"\n                  placeholder=\"Enter a username\"\n                  onChange={ this.props.handleChange('username') }\n                  defaultValue={ values.username }\n                />\n                <Form.Field\n                  control=\"input\"\n                  type=\"text\"\n                  label=\"Blurb\"\n                  placeholder=\"Enter a short blurb about yourself\"\n                  onChange={ this.props.handleChange('blurb') }\n                  defaultValue={ values.blurb }\n                />\n                <Card className=\"horizontal segments\">\n                  <div className=\"ui segment\">\n                    <Form.Radio\n                      className=\"radioOne\"\n                      label='Student'\n                      checked={ this.state.student === true }\n                      onChange={ (e, { value }) => {\n                        this.setState({ student: true })\n                        this.props.handleChangeStudent(true)\n                      } }\n                    />\n                    <Form.Radio\n                      className=\"radioTwo\"\n                      label='Teacher'\n                      checked={ this.state.student === false }\n                      onChange={ (e, { value }) => {\n                        this.setState({ student: false })\n                        this.props.handleChangeStudent(false)\n                      } }\n                    />\n                  </div>\n                  <div className=\"ui segment dropdownOne\">\n                    <Form.Field>\n                      <Dropdown onChange={ (event, data) => {\n                        this.setState({\n                          classId: data.value,\n                          cohortName: event.currentTarget.textContent\n                        })\n                        this.props.handleChangeClasses(event.currentTarget.textContent, data.value)\n                      } }\n                        value={ this.state.classId }\n                        options={ classes } closeOnChange fluid search item selection upward={ false } placeholder='Select a Class'>\n                      </Dropdown>\n                    </Form.Field>\n                  </div>\n                </Card>\n                <Button className=\"ui left floated trolley\" onClick={ this.back }>Back</Button>\n                <Button className=\"ui right floated trolley\" onClick={ this.saveAndContinue }>Save and Continue </Button>\n              </Form>\n              <div className=\"ui four steps\">\n                <div className=\"ui disabled step\">\n                  User Details\n                </div>\n                <div className=\"ui active step\">\n                  Class Details\n                </div>\n                <div className=\"ui disabled step\">\n                  Image\n                </div>\n                <div className=\"ui disabled step\">\n                  Confirm\n                </div>\n              </div>\n            </Segment>\n          </Grid.Column>\n        </Grid.Row>\n      </Container >\n    )\n  }\n}","import React, { Component } from 'react';\nimport { Form, Button, Container, Grid, Segment, Header } from 'semantic-ui-react';\n\nexport default class StepOneUserDetails extends Component {\n  state = {\n    image: this.props.state.image\n  }\n\n  saveAndContinue = (e) => {\n    e.preventDefault()\n    this.props.nextStep()\n  }\n\n  back = (e) => {\n    e.preventDefault();\n    this.props.prevStep();\n  }\n  render() {\n\n    return (\n      <Container className=\"auth-container ui grid container\">\n        <Grid.Row centered>\n          <Grid.Column className=\"six wide\" largeScreen={ 6 } computer={ 6 } tablet={ 10 } mobile={ 16 }>\n            <Segment>\n              <Header as=\"h1\" textAlign=\"center\">\n                Upload an Image\n              </Header>\n\n              <Form className=\"register-form\">\n                <Form.Field\n                  className=\"choose-upload-button\"\n                  control=\"input\"\n                  type=\"file\"\n                  label=\"Photo\"\n\n                  onChange={ (e) => {\n                    this.setState({ image: e.target.files[0] });\n                    this.props.handleChange(e.target.files[0]);\n                  } }\n                  placeholder=\"Photo\" />\n                <Button className=\"ui left floated trolley\" onClick={ this.back }>Back</Button>\n                <Button className=\"ui right floated trolley\" onClick={ this.saveAndContinue }>Save and Continue </Button>\n              </Form>\n              <div className=\"ui four steps\">\n                <div className=\"ui disabled step\">\n                  User Details\n                </div>\n                <div className=\"ui disabled step\">\n                  Class Details\n                </div>\n                <div className=\"ui active step\">\n                  Image\n                </div>\n                <div className=\"ui disabled step\">\n                  Confirm\n                </div>\n              </div>\n            </Segment>\n          </Grid.Column>\n        </Grid.Row>\n      </Container>\n    )\n  }\n}","import React, { Component } from 'react';\nimport { Button, Form, Message, Container, Grid, Segment, Header, Card } from 'semantic-ui-react';\nimport { register } from '../auth/userManager';\nimport * as firebase from 'firebase/app';\nimport 'firebase/storage';\nimport './register.css'\n\nconst displayStyle = {\n  display: \"none\"\n}\n\nconst RegisterSuccess = () => (\n  <Form style={ displayStyle } className=\"registerFormSuccess\" success >\n    <Message success header='Form Completed' content=\"Thank you for registering!\" />\n  </Form >\n)\n\nexport default class StepConfirmation extends Component {\n  storageRef = firebase.storage().ref('userImage');\n\n  saveAndContinue = (e) => {\n    e.preventDefault();\n    this.props.nextStep();\n  }\n\n  back = (e) => {\n    e.preventDefault();\n    this.props.prevStep();\n  }\n\n  render() {\n    const { values: { name, username, email, blurb, classId, student, image, password, cohortName } } = this.props;\n    const submit = () => {\n      const ref = this.storageRef.child(`${Date.now()}`);\n\n      ref.put(image)\n        .then(data => data.ref.getDownloadURL())\n        .then(url => {\n          register({\n            name: name,\n            username: username,\n            email: email,\n            password: password,\n            image: url,\n            blurb: blurb,\n            available: \"\",\n            classId: classId,\n            student: student\n          }).then(newUser => {\n            if (newUser === null || newUser === undefined)\n              return false;\n\n            this.props.onRegister(newUser);\n\n            return true;\n          }).then((shouldRedirect) => {\n            if (!shouldRedirect)\n              return false;\n\n            setTimeout(() => {\n              document.querySelector(\".registerFormSuccess\").style.display = \"block\";\n            }, 200)\n\n            return true;\n          })\n            .then((shouldRedirect) => {\n              if (!shouldRedirect)\n                return false;\n              setTimeout(() => { this.props.history.push(\"/dashboard\") }, 2000)\n\n            })\n        })\n    }\n\n    return (\n\n      <Container className=\"auth-container ui grid container\">\n        <Grid.Row centered>\n          <Grid.Column className=\"six wide\" largeScreen={ 6 } computer={ 6 } tablet={ 10 } mobile={ 16 }>\n            <Segment>\n              <Header as=\"h1\" textAlign=\"center\">\n                Confirm your Details\n              </Header>\n\n              <Card fluid>\n                <Card.Content>\n                  <Card.Description>\n                    <p>Full Name: { name }</p>\n                    <p>Username: { username }</p>\n                    <p>Email: { email }</p>\n                    <p>Blurb: { blurb }</p>\n                    <p>Class: { cohortName }</p>\n                    <p>Status: { student ? \"Student\" : \"Teacher\" }</p>\n                    <p>Image: { (image !== \"\" && image !== null ? image.name : \"\") }</p>\n                  </Card.Description>\n                </Card.Content>\n              </Card>\n\n              <Button className=\"ui left floated trolley\" onClick={ this.back }>Back</Button>\n              <Button className=\"ui right floated trolley\" onClick={ submit }>Register</Button>\n              <div className=\"ui four steps\">\n                <div className=\"ui disabled step\">\n                  User Details\n                </div>\n                <div className=\"ui disabled step\">\n                  Class Details\n                </div>\n                <div className=\"ui disabled step\">\n                  Image\n                </div>\n                <div className=\"ui active step\">\n                  Confirm\n                </div>\n              </div>\n            </Segment>\n          </Grid.Column>\n        </Grid.Row>\n        <RegisterSuccess />\n      </Container>\n    )\n  }\n}","import React, { Component } from 'react';\nimport StepOneUserDetails from './stepOne-UserDetails';\nimport StepTwoClassDetails from './stepTwo-ClassDetails';\nimport StepThreeImage from './stepThree-Image';\nimport StepConfirmation from './stepConfirmation';\n\nexport default class StepRegisterContainer extends Component {\n  state = {\n    step: 1,\n    name: \"\",\n    username: \"\",\n    email: \"\",\n    password: null,\n    image: \"\",\n    blurb: \"\",\n    available: \"\",\n    classId: \"\",\n    cohortName: \"\",\n    student: false\n  }\n\n  nextStep = () => {\n    const { step } = this.state\n    this.setState({\n      step: step + 1\n    })\n  }\n\n  prevStep = () => {\n    const { step } = this.state\n    this.setState({\n      step: step - 1\n    })\n  }\n\n  handleChange = input => event => {\n    this.setState({ [input]: event.target.value })\n  }\n\n  handleChangeStudent = isStudent => {\n    this.setState({ student: isStudent })\n  }\n\n  handleChangeImage = file => {\n    this.setState({ image: file })\n  }\n\n  handleChangeClasses = (cohortName, classId) => {\n    this.setState({\n      classId: classId,\n      cohortName: cohortName,\n    })\n  }\n\n  render() {\n    const { step } = this.state;\n    const { name, username, email, password, image, blurb, available, classId, student, cohortName } = this.state;\n    const values = { name, username, email, password, image, blurb, available, classId, student, cohortName };\n    switch (step) {\n      case 1:\n        return <StepOneUserDetails\n          nextStep={ this.nextStep }\n          handleChange={ this.handleChange }\n          values={ values }\n        />\n      case 2:\n        return <StepTwoClassDetails\n          { ...this.props }\n          state={ this.state }\n          nextStep={ this.nextStep }\n          prevStep={ this.prevStep }\n          handleChange={ this.handleChange }\n          handleChangeStudent={ this.handleChangeStudent }\n          handleChangeClasses={ this.handleChangeClasses }\n          values={ values }\n        />\n      case 3:\n        return <StepThreeImage\n          { ...this.props }\n          state={ this.state }\n          nextStep={ this.nextStep }\n          prevStep={ this.prevStep }\n          handleChange={ this.handleChangeImage }\n          values={ values }\n        />\n      case 4:\n        return <StepConfirmation\n          { ...this.props }\n          state={ this.state }\n          nextStep={ this.nextStep }\n          prevStep={ this.prevStep }\n          values={ values }\n        />\n      default:\n        break;\n    }\n  }\n}","import React, { Component } from 'react';\nimport { Form, Button, Container, Grid, Segment, Header, Message } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport { login } from '../auth/userManager';\n\nexport default class Login extends Component {\n  state = {\n    email: '',\n    password: ''\n  }\n\n  submit = () => {\n    login(this.state.email, this.state.password)\n      .then((user) => {\n        this.props.onLogin(user);\n        this.props.history.push('/');\n      });\n  }\n\n  render() {\n    return (\n      <Container className=\"auth--container\">\n        <Grid>\n          <Grid.Row centered>\n            <Grid.Column largeScreen={ 6 } computer={ 6 } tablet={ 10 } mobile={ 16 }>\n              <Segment>\n                <Header as=\"h1\" textAlign=\"center\">\n                  Log In\n                </Header>\n                <Form className=\"login--form\" onSubmit={ this.submit }>\n                  <Form.Field\n                    control=\"input\"\n                    type=\"email\"\n                    label=\"Email Address\"\n                    placeholder=\"Enter an email\"\n                    onChange={ (e) => this.setState({ email: e.target.value }) }\n                  />\n                  <Form.Field\n                    control=\"input\"\n                    type=\"password\"\n                    label=\"Password\"\n                    placeholder=\"Password\"\n                    onChange={ (e) => this.setState({ password: e.target.value }) }\n                  />\n                  <Form.Field control=\"input\" type=\"hidden\" />\n                  <Button className=\"trolley\" fluid content=\"Log in\" />\n                </Form>\n                <Message className=\"auth--message\">\n                  Not registered yet? <Link to=\"/register\">Sign Up</Link>\n                </Message>\n              </Segment>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Container>\n    )\n  }\n}","import React, { Component } from 'react';\nimport { Grid, Message, Container, Header } from 'semantic-ui-react';\n\nexport default class Home extends Component {\n\n  logout = () => {\n    this.props.onLogout();\n    this.props.history.push('/login');\n  }\n\n  solvedTickets = () => {\n    let numberOfTickets = 0;\n    if (this.props.activeUser.student) {\n      numberOfTickets = this.props.ticket.filter((ticket) => {\n        if (ticket.userId === this.props.activeUser.id && ticket.ticketComplete && ticket.classId === this.props.activeUser.classId)\n          return ticket\n        return null\n      })\n    } else if (this.props.activeUser.student === false) {\n      numberOfTickets = this.props.ticket.filter((ticket) => {\n        let currentUserIsTeacherWithTicket = false;\n        //iterate over joined table\n        this.props.allTeacherTickets.forEach((join) => {\n          //both keys in joined table equal\n          if (join.ticketId === ticket.id && join.userId === this.props.activeUser.id)\n            currentUserIsTeacherWithTicket = true;\n        })\n\n        if (ticket.classId === this.props.activeUser.classId && ticket.ticketComplete && currentUserIsTeacherWithTicket)\n          return ticket\n        return null\n      })\n    }\n    return numberOfTickets;\n  }\n\n\n  render() {\n\n    return (\n      <Container className=\"home--container\">\n        <Grid>\n          <Grid.Row centered>\n            <Grid.Column largeScreen={ 8 } computer={ 10 } tablet={ 12 } mobile={ 16 }>\n              <Header textAlign=\"center\">Welcome { this.props.activeUser.name }</Header>\n              <Message\n                header=\"You have solved\"\n                content={ this.solvedTickets().length + \" tickets\" }\n              />\n            </Grid.Column>\n          </Grid.Row>\n        </Grid >\n      </Container>\n    )\n  }\n}","import React, { Component } from 'react';\nimport { Container } from 'semantic-ui-react';\nimport AllSolvedTicketListStudent from '../tickets/solvedTickets/student/allSolvedTicketsItem';\nimport './search.css';\n\nexport default class SearchResults extends Component {\n  render() {\n\n    let openTicket = this.props.searchResults.filter((ticket) => {\n      if (ticket.ticketComplete)\n        return ticket;\n    });\n\n    let classTickets = openTicket.map((item, index) => {\n      let images = [];\n\n      //keeps the creator of the ticket first in image render\n      this.props.allUsers.forEach((user) => {\n        if (item.userId === user.id) {\n          images.push(user.image);\n        }\n      });\n\n      this.props.allUsers.forEach((user) => {\n        this.props.joinedTickets.forEach((join) => {\n          if (item.id === join.ticketId && join.userId === user.id) {\n            images.push(user.image);\n          }\n        });\n      })\n\n      return (\n        <>\n          <AllSolvedTicketListStudent\n            { ...this.props }\n            key={ index }\n            item={ item }\n            index={ index }\n            image={ images }\n            extraClass=\"search-result-item\"\n          />\n          <div className=\"search-result-spacer\"></div>\n        </>\n      );\n    });\n\n    return (\n      <Container className=\"searchResults\">\n        <h1>Search Results</h1>\n        <Container className=\"ui three cards search-results\"> { classTickets } </Container>\n      </Container>\n    );\n  }\n}","import React, { Component } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { withRouter } from 'react-router';\nimport TicketContainer from './tickets/activeTickets/ticketContainer';\nimport TicketsManager from '../modules/ticketManager';\nimport DashContainer from './dashboard/dashContainer'\nimport UsersManager from '../modules/userManager';\nimport CurrentTicketManager from '../modules/currentTicketUsers';\nimport SolvedTicketsContainer from './tickets/solvedTickets/solvedContainer';\nimport JoinedTicketManager from '../modules/joinedTickets';\nimport StepRegisterContainer from './registration/stepRegisterContainer';\nimport Login from './dashboard/Login';\nimport Home from './dashboard/Home';\nimport SearchResults from './search/search';\nimport firebase from 'firebase/app';\nimport 'firebase/database';\n\n\nclass ApplicationViews extends Component {\n  state = {\n    users: [],\n    tickets: [],\n    reverseTickets: [],\n    joinedTickets: [],\n    classTickets: [],\n    currentTicketUsers: [],\n    classes: []\n  };\n  //calls\n\n  addTicket = ticket => {\n    const newState = {};\n    return TicketsManager.saveTicket(ticket)\n      .then((tickets) => {\n        this.props.history.push(\"/tickets/my-tickets\")\n        this.setState(newState)\n        return tickets;\n      });\n  };\n\n  editTicket = editedTicket => {\n    const newState = {};\n    TicketsManager.editTicket(editedTicket)\n      .then(() => {\n        this.props.history.push(\"/tickets/my-tickets\");\n        this.setState(newState);\n      });\n  };\n\n  deleteUser = id => {\n    const newState = {};\n    UsersManager.deleteUser(id)\n      .then(() => {\n        this.props.history.push(\"/dashboard\");\n        this.setState(newState);\n      });\n  };\n\n  addUser = user => {\n    const newState = {};\n    return UsersManager.saveUser(user)\n      .then((users) => {\n        this.props.setUser(user);\n        this.props.history.push(\"/dashboard\")\n        this.setState(newState)\n        //return users so it can be used in the form\n        return users;\n      });\n  };\n\n  editUser = editedUser => {\n    const newState = {};\n    UsersManager.editUser(editedUser)\n      .then(() => {\n        this.props.setUser(editedUser);\n        this.props.history.push(\"/dashboard\");\n        this.setState(newState);\n      });\n  };\n\n  deleteCurrentTicketUser = id => {\n    const newState = {};\n    CurrentTicketManager.deleteCurrentTicketUser(id)\n      .then(() => {\n        this.props.history.push(\"/tickets/my-tickets\");\n        this.setState(newState);\n        return id\n      });\n  };\n\n  addCurrentTicketUser = teacherTicket => {\n    const newState = {};\n    return CurrentTicketManager.saveCurrentTicketUser(teacherTicket)\n      .then((ticket) => {\n        this.props.history.push(\"/tickets/my-tickets\")\n        this.setState(newState)\n        return ticket;\n      });\n  };\n\n  editCurrentTicketUser = editedTicket => {\n    const newState = {};\n    CurrentTicketManager.editCurrentTicketUser(editedTicket)\n      .then(() => {\n        this.props.history.push(\"/tickets/my-tickets\");\n        this.setState(newState);\n      });\n  };\n\n  deleteJoin = id => {\n    const newState = {};\n    JoinedTicketManager.deleteJoinedTicket(id)\n      .then(() => {\n        this.props.history.push(\"/tickets/my-tickets\");\n        this.setState(newState);\n      });\n  };\n\n  addJoin = newJoin => {\n    const newState = {};\n    return JoinedTicketManager.saveJoinedTicket(newJoin)\n      .then((joinedTicket) => {\n        this.props.history.push(\"/tickets/my-tickets\")\n        this.setState(newState)\n        return joinedTicket;\n      });\n  };\n\n  editJoin = editJoinedTicket => {\n    const newState = {};\n    JoinedTicketManager.editJoinedTicket(editJoinedTicket)\n      .then(() => {\n        this.props.history.push(\"/tickets/my-tickets\");\n        this.setState(newState);\n      });\n  };\n\n\n\n  componentDidMount() {\n    const newState = {};\n    let database = firebase.database();\n\n    let ticketsRef = database.ref('tickets/');\n    ticketsRef.on('value', (tickets) => {\n      let ticketArr = [];\n      let allTickets = tickets.val();\n      for (let ticket in allTickets) {\n        ticketArr.push(allTickets[ticket]);\n      }\n      newState.tickets = ticketArr;\n      this.setState(newState);\n    });\n\n    let usersRef = database.ref('users/');\n    usersRef.on('value', (users) => {\n      let userArr = [];\n      let allUsers = users.val();\n      for (let user in allUsers) {\n        userArr.push(allUsers[user]);\n      }\n      newState.users = userArr;\n      this.setState(newState);\n    });\n\n    let joinedTicketsRef = database.ref('joinedTickets/');\n    joinedTicketsRef.on('value', (joinedTickets) => {\n      let joinedTicketsArr = [];\n      let allJoinedTickets = joinedTickets.val();\n      for (let joinedTicket in allJoinedTickets) {\n        joinedTicketsArr.push(allJoinedTickets[joinedTicket]);\n      }\n      newState.joinedTickets = joinedTicketsArr;\n      this.setState(newState);\n    });\n\n    let classTicketsRef = database.ref('classTickets/');\n    classTicketsRef.on('value', (classTickets) => {\n      let classTicketsArr = [];\n      let allClassTickets = classTickets.val();\n      for (let classTicket in allClassTickets) {\n        classTicketsArr.push(allClassTickets[classTicket]);\n      }\n      newState.classTickets = classTicketsArr;\n      this.setState(newState);\n    });\n\n    let currentTicketUsersRef = database.ref('currentTicketUsers/');\n    currentTicketUsersRef.on('value', (currentTicketUsers) => {\n      sessionStorage.setItem(\"notifyModalOpenAlready\", false);\n\n      let currentTicketUsersArr = [];\n      let allCurrentTicketUsers = currentTicketUsers.val();\n      for (let currentTicketUser in allCurrentTicketUsers) {\n        currentTicketUsersArr.push(allCurrentTicketUsers[currentTicketUser]);\n      }\n      newState.currentTicketUsers = currentTicketUsersArr;\n      this.setState(newState);\n    });\n\n    let classesRef = database.ref('classes/');\n    classesRef.on('value', (classes) => {\n      let classesArr = [];\n      let allClasses = classes.val();\n      for (let oneClass in allClasses) {\n        classesArr.push(allClasses[oneClass]);\n      }\n      newState.classes = classesArr;\n      this.setState(newState);\n    });\n\n    let ticketsInReverseRef = database.ref('/tickets/').orderByChild(\"submitTime\");\n    ticketsInReverseRef.on('value', (tickets) => {\n      let ticketArr = [];\n      let allTickets = tickets.val();\n      for (let ticket in allTickets) {\n        ticketArr.push(allTickets[ticket]);\n      }\n      newState.reverseTickets = ticketArr.reverse();\n      this.setState(newState);\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"App\">\n          <div>\n            <Route exact path=\"/\" render={ (props) => {\n              if (this.props.activeUser) {\n                return <Home\n                  { ...props }\n                  { ...this.props }\n                  activeUser={ this.props.activeUser }\n                  allUsers={ this.state.users }\n                  ticket={ this.state.tickets }\n                  allTeacherTickets={ this.state.currentTicketUsers }\n                />\n              } else {\n                return <Redirect to=\"/login\" />\n              }\n            } } />\n\n            <Route exact path=\"/login\" render={ (props) =>\n              <Login { ...props }\n                onLogin={ (user) => this.props.setUser(user) } /> }\n            />\n\n            <Route exact path=\"/register\" render={ (props) => {\n              return <StepRegisterContainer\n                { ...props }\n                { ...this.props }\n                allUsers={ this.state.users }\n                allClasses={ this.state.classes }\n                addClass={ this.addClass }\n                editClass={ this.editClass }\n                onRegister={ (user) => this.props.setUser(user) }\n              />\n            } }\n            />\n\n            <Route exact path=\"/dashboard\" render={ (props) => {\n              if (this.props.activeUser) {\n                return <DashContainer\n                  { ...props }\n                  { ...this.props }\n                  user={ this.state.users }\n                  editUser={ this.editUser }\n                />\n              } else {\n                return <Redirect to=\"/login\" />\n              }\n            } }\n            />\n\n            <Route exact path=\"/tickets/my-tickets\" render={ (props) => {\n              if (this.props.activeUser) {\n                return <TicketContainer\n                  { ...props }\n                  { ...this.props }\n                  allUsers={ this.state.users }\n                  allTickets={ this.state.tickets }\n                  joinedTickets={ this.state.joinedTickets }\n                  addTicket={ this.addTicket }\n                  editTicket={ this.editTicket }\n                  addJoin={ this.addJoin }\n                  editJoin={ this.editJoin }\n                  deleteJoin={ this.deleteJoin }\n                  allTeacherTickets={ this.state.currentTicketUsers }\n                  removeTeacherTicket={ this.deleteCurrentTicketUser }\n                  addTeacherTicket={ this.addCurrentTicketUser }\n                  editTeacherTicket={ this.editCurrentTicketUser }\n                />\n              } else {\n                return <Redirect to=\"/login\" />\n              }\n            } }\n            />\n\n            <Route exact path=\"/tickets/solved-tickets\" render={ (props) => {\n              if (this.props.activeUser) {\n                return <SolvedTicketsContainer\n                  { ...props }\n                  { ...this.props }\n                  joinedTickets={ this.state.joinedTickets }\n                  class={ this.state.classes }\n                  allUsers={ this.state.users }\n                  reverseTickets={ this.state.reverseTickets }\n                  allTeacherTickets={ this.state.currentTicketUsers }\n                />\n              } else {\n                return <Redirect to=\"/login\" />\n              }\n            } }\n            />\n            <Route exact path=\"/search\" render={ props => {\n              if (this.props.activeUser) {\n                return <SearchResults\n                  { ...props }\n                  { ...this.props }\n                  allUsers={ this.state.users }\n                  allTickets={ this.state.tickets }\n                  joinedTickets={ this.state.joinedTickets }\n                  searchResults={ this.props.searchResults }\n                  allTeacherTickets={ this.state.currentTicketUsers }\n                />\n              } else {\n                return <Redirect to=\"/login\" />\n              }\n            } }\n            />\n          </div>\n        </div>\n      </>\n    );\n  }\n}\nexport default withRouter(ApplicationViews);\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router';\nimport { getUserFromSessionStorage } from './components/auth/userManager';\nimport Logo from './components/logo/logo';\nimport Navbar from './components/navbar/navbar';\nimport { logout } from './components/auth/userManager';\nimport ApplicationViews from './components/applicationViews';\nimport TicketSearch from './modules/ticketManager'\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    activeUser: getUserFromSessionStorage(),\n    searchResults: []\n  }\n\n  setUser = (user) => {\n    //puts the active user in session storage, necessary for editing user profiles\n    sessionStorage.setItem(\"user\", JSON.stringify(user));\n    this.setState({\n      activeUser: user\n    })\n  }\n\n  clearActiveUser = (user) => {\n    this.setState({\n      activeUser: user\n    })\n  }\n\n  getSearchResults = input => {\n    TicketSearch.search(input).then(results => {\n      this.setState({ searchResults: results });\n      this.props.history.push(\"/search\")\n    });\n  };\n\n  render() {\n\n    return (\n      <React.Fragment>\n        <Logo />\n        <Navbar\n          setUser={ this.setUser }\n          clearActiveUser={ this.clearActiveUser }\n          activeUser={ this.state.activeUser }\n          onLogout={ logout }\n          getSearchResults={ this.getSearchResults }\n          searchResults={ this.state.searchResults }\n        />\n        <ApplicationViews\n          setUser={ this.setUser }\n          activeUser={ this.state.activeUser }\n          searchResults={ this.state.searchResults }\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withRouter(App)","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const FBapiKey = \"AIzaSyBy0YSU4oHkpDKIP9ck0a23EHCWLGpUjT4\"\n\nexport const FBauthDomain = \"frontend-capstone-e1589.firebaseapp.com\"\n\nexport const FBdatabaseURL = \"https://frontend-capstone-e1589.firebaseio.com\"\n\nexport const FBprojectId = \"frontend-capstone-e1589\"\n\nexport const FBstorageBucket = \"frontend-capstone-e1589.appspot.com\"\n\nexport const FBmessagingSenderId = \"396170941583\"\n\nexport const FBappId = \"1:396170941583:web:65d3aa4b8f37e54e\"","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport App from './App';\nimport 'semantic-ui-css/semantic.min.css';\nimport * as serviceWorker from './serviceWorker';\nimport * as firebase from 'firebase/app';\nimport { FBapiKey, FBauthDomain, FBdatabaseURL, FBprojectId, FBstorageBucket, FBmessagingSenderId, FBappId } from './config';\nimport './index.css';\n\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: FBapiKey,\n  authDomain: FBauthDomain,\n  databaseURL: FBdatabaseURL,\n  projectId: FBprojectId,\n  storageBucket: FBstorageBucket,\n  messagingSenderId: FBmessagingSenderId,\n  appId: FBappId\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>\n  , document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}